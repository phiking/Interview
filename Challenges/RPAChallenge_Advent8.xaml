<Activity mc:Ignorable="sap sap2010" x:Class="RPAChallenge_Advent8" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="974,5360" sap2010:WorkflowViewState.IdRef="RPAChallenge_Advent8_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="40">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Check for isDefinedTask Rule:&#xA;if a task is present in Execution data, but not defined in Task data then isDefinedTask = False&#xA;else: isDefinedTask = True&#xA;&#xA;Check for TaskIsStarted Rule&#xA;if a task is defined in Task data, and also present in Execution Data then TaskIsStarted = True&#xA;Else TaskIsStarted = False&#xA;&#xA;Check for hasValidRCExcuted Rule:&#xA;if a Task in Execution data is executed in a region which is not defined in Task data for this Task ID then hasValidRCExcuted = False&#xA;else hasValidRCExcuted = True&#xA;if the task was never executed: hasValidRCExcuted = False" DisplayName="RPAChallenge_Advent8" sap:VirtualizedContainerService.HintSize="745,5195" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="TasksDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="ExecutionsDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="OutputDT" />
      <Variable x:TypeArguments="s:String[]" Name="TasksArray" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="AllTasks" />
      <Variable x:TypeArguments="s:String[]" Name="ExecutionsArray" />
      <Variable x:TypeArguments="sd:DataTable" Name="SplitTasksDT" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Read Input Data" DisplayName="ReadData" sap:VirtualizedContainerService.HintSize="703,337" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[TasksDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Tasks" WorkbookPath="Data\Input\RPA Challenge_Advent 8\DataAdvent#8.xlsx" />
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[ExecutionsDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Executions" WorkbookPath="Data\Input\RPA Challenge_Advent 8\DataAdvent#8.xlsx" />
    </Sequence>
    <ui:BuildDataTable DataTable="[OutputDT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="703,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;TaskID&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;isDefinedTask&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TaskIsStarted&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;hasValidRCExcuted&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;CompletedAllValidRCs&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <Sequence sap2010:Annotation.AnnotationText="Lets populate all the TaskIDs from TasksDT &amp; ExecutionsDT to ResultReport Datatable. This will reduce the job later on." DisplayName="Populate Tasks" sap:VirtualizedContainerService.HintSize="703,1174" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap2010:Annotation.AnnotationText="Add all distinct tasks to TasksArray" sap:VirtualizedContainerService.HintSize="307,91" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[TasksArray]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[TasksDT.AsEnumerable().Select(Function(a) a.Field(Of String)("Task").ToString).Distinct().ToArray]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Add all items inTasksArray to AllTasks" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="307,225" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[TasksArray]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="item" />
            </ActivityAction.Argument>
            <AddToCollection x:TypeArguments="x:String" Collection="[AllTasks]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[item.ToString]" />
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <Assign sap2010:Annotation.AnnotationText="Add all distinct tasks to ExecutionsArray" sap:VirtualizedContainerService.HintSize="307,91" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[ExecutionsArray]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[ExecutionsDT.AsEnumerable().Select(Function(a) a.Field(Of String)("Task").ToString).Distinct().ToArray]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Add all items in ExecutionsArray to AllTasks" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="307,225" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[ExecutionsArray]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="item" />
            </ActivityAction.Argument>
            <AddToCollection x:TypeArguments="x:String" Collection="[AllTasks]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[item.ToString]" />
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="307,248" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[AllTasks.Distinct().ToArray()]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{item}]" DataTable="[OutputDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="IsDefinedTask:&#xA;&#xA;if a task is present in Execution data, but not defined in Task data then isDefinedTask = False&#xA;else: isDefinedTask = True&#xA;&#xA;For each row in result updated the approriate column value at column isDefinedTask&#xA;&#xA;Compare 2 string arrays and return the value that are unique in each arrays&#xA;TasksArray.Except(ExecutionsArray).Concat(ExecutionsArray.Except(TasksArray)).ToArray&#xA;&#xA;Compare 2 string arrays and return the value that is unique in ExecutionsArray&#xA;ExecutionsArray.Except(TasksArray).ToArray&#xA;" DisplayName="Task 1" sap:VirtualizedContainerService.HintSize="703,866" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <Sequence.Variables>
        <Variable x:TypeArguments="s:String[]" Name="IsNotDefinedTaskArray" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="619,60" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[IsNotDefinedTaskArray]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[ExecutionsArray.Except(TasksArray).ToArray]</InArgument>
        </Assign.Value>
      </Assign>
      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="619,61" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[String.Join(&quot;,&quot;,IsNotDefinedTaskArray)]" />
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[OutputDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="619,366" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <If Condition="[Not IsNotDefinedTaskArray.Contains(row(0).ToString)]" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("isDefinedTask")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">["True"]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("isDefinedTask")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">["False"]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Check for TaskIsStarted Rule:&#xA;&#xA;Compare 2 arrays that can be found in both array: &#xA;&#xA;TasksArray.Select(Function(x) x.Trim).ToArray.Intersect(ExecutionsArray.Select(Function(x) x.Trim)).ToArray&#xA;&#xA;if a task is defined in Task data, and also present in Execution Data then TaskIsStarted = True&#xA;Else TaskIsStarted = False" DisplayName="Task 2" sap:VirtualizedContainerService.HintSize="703,690" sap2010:WorkflowViewState.IdRef="Sequence_11">
      <Sequence.Variables>
        <Variable x:TypeArguments="s:String[]" Name="TaskIsStartedArray" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="619,60" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[TaskIsStartedArray]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[TasksArray.Select(Function(x) x.Trim).ToArray.Intersect(ExecutionsArray.Select(Function(x) x.Trim)).ToArray]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[OutputDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="619,366" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <If Condition="[TaskIsStartedArray.Contains(row(0).ToString)]" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("TaskIsStarted")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">["True"]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("TaskIsStarted")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">["False"]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Check for hasValidRCExcuted Rule:&#xA;if a Task in Execution data is executed in a region which is not defined in Task data for this Task ID then hasValidRCExcuted = False&#xA;else hasValidRCExcuted = True&#xA;if the task was never executed: hasValidRCExcuted = False" DisplayName="Task 3" sap:VirtualizedContainerService.HintSize="703,1057" sap2010:WorkflowViewState.IdRef="Sequence_12">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="HasValidRCExecutedDT" />
        <Variable x:TypeArguments="s:String[]" Name="HasValidRCExecutedArray" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:BuildDataTable DataTable="[SplitTasksDT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="661,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Task&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;RegionCode&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[TasksDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="661,51" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="349,440" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:String[]" Name="RegionalCodeArray" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="307,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[RegionalCodeArray]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[row(1).ToString.Split(","c)]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="307,248" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[RegionalCodeArray]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0),item}]" DataTable="[SplitTasksDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:JoinDataTables DataTable1="[SplitTasksDT]" DataTable2="[ExecutionsDT]" DisplayName="Join Data Tables" sap:VirtualizedContainerService.HintSize="661,59" sap2010:WorkflowViewState.IdRef="JoinDataTables_2" JoinType="Inner" OutputDataTable="[HasValidRCExecutedDT]">
        <ui:JoinDataTables.Arguments>
          <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
              <ui:JoinOperationArgument.Column1>
                <InArgument x:TypeArguments="x:String">["Task"]</InArgument>
              </ui:JoinOperationArgument.Column1>
              <ui:JoinOperationArgument.Column2>
                <InArgument x:TypeArguments="x:String">["TASK"]</InArgument>
              </ui:JoinOperationArgument.Column2>
            </ui:JoinOperationArgument>
            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
              <ui:JoinOperationArgument.Column1>
                <InArgument x:TypeArguments="x:String">["RegionCode"]</InArgument>
              </ui:JoinOperationArgument.Column1>
              <ui:JoinOperationArgument.Column2>
                <InArgument x:TypeArguments="x:String">["REGIONCODE"]</InArgument>
              </ui:JoinOperationArgument.Column2>
            </ui:JoinOperationArgument>
          </scg:List>
        </ui:JoinDataTables.Arguments>
      </ui:JoinDataTables>
      <Assign sap2010:Annotation.AnnotationText="Add all distinct tasks to TasksArray" sap:VirtualizedContainerService.HintSize="661,91" sap2010:WorkflowViewState.IdRef="Assign_11">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[HasValidRCExecutedArray]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[HasValidRCExecutedDT.AsEnumerable().Select(Function(a) a.Field(Of String)("Task")).Distinct().ToArray()]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[OutputDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="661,458" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="611,310" sap2010:WorkflowViewState.IdRef="Sequence_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[HasValidRCExecutedArray.Contains(row(0).ToString)]" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_4">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("hasValidRCExcuted")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["True"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("hasValidRCExcuted")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["False"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Check for CompletedAllValidRCs Rule&#xA;&#xA;The executions of task in execution data with the status “OK” are relevant&#xA;if a task is executed for all RegionCodes defined for this task in the Task data then: CompletedAllValidRCs = True&#xA;Else: CompletedAllValidRCs = False&#xA;If the task was executed on not defined RegionCodes it will not count and change the CompletedAllValidRCs Check result" DisplayName="Task 4" sap:VirtualizedContainerService.HintSize="703,333" sap2010:WorkflowViewState.IdRef="Sequence_17">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="CompletedAllValidRCsDT" />
        <Variable x:TypeArguments="sd:DataTable" Name="SuccessExecutionDT" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:JoinDataTables DataTable1="[SplitTasksDT]" DataTable2="[ExecutionsDT]" DisplayName="Join Data Tables" sap:VirtualizedContainerService.HintSize="661,59" sap2010:WorkflowViewState.IdRef="JoinDataTables_3" JoinType="Inner" OutputDataTable="[SuccessExecutionDT]">
        <ui:JoinDataTables.Arguments>
          <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
              <ui:JoinOperationArgument.Column1>
                <InArgument x:TypeArguments="x:String">["RESULT"]</InArgument>
              </ui:JoinOperationArgument.Column1>
              <ui:JoinOperationArgument.Column2>
                <InArgument x:TypeArguments="x:String">["OK"]</InArgument>
              </ui:JoinOperationArgument.Column2>
            </ui:JoinOperationArgument>
          </scg:List>
        </ui:JoinDataTables.Arguments>
      </ui:JoinDataTables>
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[OutputDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="661,656" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="611,508" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="FilterSplitTasksDT" />
                <Variable x:TypeArguments="sd:DataTable" Name="FilterSuccessExecutionDT" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:FilterDataTable DataTable="[SplitTasksDT]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="569,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[FilterSplitTasksDT]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">["Task"]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <x:Null />
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
              </ui:FilterDataTable>
              <ui:FilterDataTable DataTable="[SuccessExecutionDT]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="569,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[FilterSuccessExecutionDT]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">["Task"]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">[row("0").ToString]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <x:Null />
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
              </ui:FilterDataTable>
              <If Condition="[FilterSplitTasksDT.Rows.Count.Equals(FilterSuccessExecutionDT.Rows.Count)]" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_5">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("CompletedAllValidRCs")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["True"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("CompletedAllValidRCs")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["False"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[OutputDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="703,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="[&quot;C:\Users\Phi\Dropbox\My PC (DESKTOP-PRIGIQH)\Documents\GitHub\Interview\Data\Output\RPA Challenge_Advent 8\Output_&quot;+Now.ToString(&quot;MMddyy-hhmmss&quot;)+&quot;.xlsx&quot;]" />
  </Sequence>
</Activity>